<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:flexnodal="com.github.ciacob.flexnodal.*">

	<fx:Declarations>

		<!-- Tab data provider -->
		<s:ArrayCollection id="chartMode">
			<fx:Object label="Normal" data="normal"/>
			<fx:Object label="Exclusive" data="exclusive"/>
			<fx:Object label="Isolated" data="isolated"/>
		</s:ArrayCollection>
	</fx:Declarations>

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		global {
			font-size: 15;
		}

		s|WindowedApplication {
			chromeColor: #444444;
			backgroundColor: #444444;
			color: #ffffff;
		}

		s|ComboBox {
			borderColor: #000000;
			contentBackgroundColor: #141414;
		}

		s|List {
			contentBackgroundColor: #303030;
			alternatingItemColors: #303030;
			rollOverColor: #2a57dd; 
			selectionColor: #007994;
		}

		.myChartStyle {
			padding: 10;
			lineThickness: 4;
			lineColor: #3c0097;
			lineColorOver: #6637ad;
			lineColorSelected: #934bff;
			lineColorAnchor: #301b4f;
			defaultAlpha : 0.5;
		}
	</fx:Style>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayCollection;
			import spark.events.IndexChangeEvent;
			
			// Flags to raise when the current chart has selection.
			[Bindable]
			private var _haveSelection:Boolean;
			
			// Sample charts to edit.
			[Bindable]
			private const dp:ArrayCollection = new ArrayCollection([
						{
							name: "Chart1",
							values: [[0, 0.1], [0.5, 0.8], [0.95, 0], [1, 0]]
						},
						{
							name: "Chart2",
							values: [[0, 0], [1, 1]]
						},
						{
							name: "Chart3",
							values: [[0, 1], [1, 0]]
						}
					]);
			
			/**
			 * Removes current's chart selection.
			 */
			private function _clearSelection():void {
				// TBD
			}
			
			/**
			 * Deletes current chart's selection.
			 */
			private function _deleteSelection():void {
				// TBD
			}
			
			/**
			 * Listener. Executes when the combo box is changed.
			 */
			private function _onCbChanged(event:IndexChangeEvent):void {
				// TBD
			}
			
			/**
			 * Listener. Executed when user types something in the combobox
			 * and commits the value (e.g., by pressing Tab).
			 */
			private function _labelToItem(input:String):* {
				// TBD
			}
			
			/**
			 * Executed when user clicks on one of the tabs.
			 */
			private function _onTabClick(event:IndexChangeEvent):void {
				if (!event || event.newIndex < 0) {
					return;
				}
				// TBD
			}
		]]>
	</fx:Script>

	<s:VGroup padding="25" width="100%" height="100%"
		horizontalAlign="justify">

		<!-- Controls bar -->
		<s:HGroup id="controls">

			<!-- Current chart -->
			<s:Group width="100%">
				<s:ComboBox dataProvider="{dp}" labelField="name"
					change="{_onCbChanged(event)}"
					labelToItemFunction="{_labelToItem}"/>
			</s:Group>

			<!-- Selection-related actions -->
			<s:HGroup horizontalAlign="center" width="100%">
				<s:Button label="Clear selection"
					enabled="{_haveSelection}"
					click="{_clearSelection()}"/>

				<s:Button label="Delete selection"
					enabled="{_haveSelection}"
					click="{_deleteSelection()}"/>
			</s:HGroup>

			<!-- Editing mode for current chart -->
			<s:Group width="100%">
				<s:ButtonBar dataProvider="{chartMode}"
					right="0"/>
			</s:Group>

		</s:HGroup>

		<!-- Nodal component (charts editor) -->
		<flexnodal:Nodal height="100%"
			dataProvider="{dp}"
			chartStyle="myChartStyle"/>

	</s:VGroup>
</s:WindowedApplication>
